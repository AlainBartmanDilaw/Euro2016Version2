//------------------------------------------------------------------------------
// <auto-generated>
//    Ce code a été généré à partir d'un modèle.
//
//    Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//    Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Euro2016.EntityFramework
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class Euro2016BetsEntities : DbContext
    {
        public Euro2016BetsEntities()
            : base("name=Euro2016BetsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<bet> bet { get; set; }
        public DbSet<country> country { get; set; }
        public DbSet<groups> groups { get; set; }
        public DbSet<groupsmatchschedule> groupsmatchschedule { get; set; }
        public DbSet<matchs> matchs { get; set; }
        public DbSet<matchsteam> matchsteam { get; set; }
        public DbSet<Parameters> Parameters { get; set; }
        public DbSet<phase> phase { get; set; }
        public DbSet<players> players { get; set; }
        public DbSet<scorer> scorer { get; set; }
        public DbSet<stadium> stadium { get; set; }
        public DbSet<team> team { get; set; }
        public DbSet<towns> towns { get; set; }
        public DbSet<Usr> Usr { get; set; }
        public DbSet<webpages_Membership> webpages_Membership { get; set; }
        public DbSet<webpages_OAuthMembership> webpages_OAuthMembership { get; set; }
        public DbSet<webpages_Roles> webpages_Roles { get; set; }
        public DbSet<MatchsList> MatchsList { get; set; }
        public DbSet<UsrMatch> UsrMatch { get; set; }
        public DbSet<UserMatchBets> UserMatchBets { get; set; }
        public DbSet<UserPoints> UserPoints { get; set; }
        public DbSet<Pool> Pool { get; set; }
        public DbSet<UserPool> UserPool { get; set; }
        public DbSet<UserStanding> UserStanding { get; set; }
        public DbSet<FullUserStanding> FullUserStanding { get; set; }
    
        public virtual int PostBet(Nullable<int> pMatchsIdt, Nullable<int> pUsrIdt, string pHomeAway, Nullable<int> pScore)
        {
            var pMatchsIdtParameter = pMatchsIdt.HasValue ?
                new ObjectParameter("pMatchsIdt", pMatchsIdt) :
                new ObjectParameter("pMatchsIdt", typeof(int));
    
            var pUsrIdtParameter = pUsrIdt.HasValue ?
                new ObjectParameter("pUsrIdt", pUsrIdt) :
                new ObjectParameter("pUsrIdt", typeof(int));
    
            var pHomeAwayParameter = pHomeAway != null ?
                new ObjectParameter("pHomeAway", pHomeAway) :
                new ObjectParameter("pHomeAway", typeof(string));
    
            var pScoreParameter = pScore.HasValue ?
                new ObjectParameter("pScore", pScore) :
                new ObjectParameter("pScore", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PostBet", pMatchsIdtParameter, pUsrIdtParameter, pHomeAwayParameter, pScoreParameter);
        }
    
        public virtual int PostBetAway(Nullable<int> pMatchsIdt, Nullable<int> pUsrIdt, Nullable<int> pScore)
        {
            var pMatchsIdtParameter = pMatchsIdt.HasValue ?
                new ObjectParameter("pMatchsIdt", pMatchsIdt) :
                new ObjectParameter("pMatchsIdt", typeof(int));
    
            var pUsrIdtParameter = pUsrIdt.HasValue ?
                new ObjectParameter("pUsrIdt", pUsrIdt) :
                new ObjectParameter("pUsrIdt", typeof(int));
    
            var pScoreParameter = pScore.HasValue ?
                new ObjectParameter("pScore", pScore) :
                new ObjectParameter("pScore", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PostBetAway", pMatchsIdtParameter, pUsrIdtParameter, pScoreParameter);
        }
    
        public virtual int PostBetFull(Nullable<int> pMatchsIdt, string pUsrName, Nullable<int> pScoreHome, Nullable<int> pScoreAway, string pIgnore)
        {
            var pMatchsIdtParameter = pMatchsIdt.HasValue ?
                new ObjectParameter("pMatchsIdt", pMatchsIdt) :
                new ObjectParameter("pMatchsIdt", typeof(int));
    
            var pUsrNameParameter = pUsrName != null ?
                new ObjectParameter("pUsrName", pUsrName) :
                new ObjectParameter("pUsrName", typeof(string));
    
            var pScoreHomeParameter = pScoreHome.HasValue ?
                new ObjectParameter("pScoreHome", pScoreHome) :
                new ObjectParameter("pScoreHome", typeof(int));
    
            var pScoreAwayParameter = pScoreAway.HasValue ?
                new ObjectParameter("pScoreAway", pScoreAway) :
                new ObjectParameter("pScoreAway", typeof(int));
    
            var pIgnoreParameter = pIgnore != null ?
                new ObjectParameter("pIgnore", pIgnore) :
                new ObjectParameter("pIgnore", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PostBetFull", pMatchsIdtParameter, pUsrNameParameter, pScoreHomeParameter, pScoreAwayParameter, pIgnoreParameter);
        }
    
        public virtual int PostBetHome(Nullable<int> pMatchsIdt, Nullable<int> pUsrIdt, Nullable<int> pScore)
        {
            var pMatchsIdtParameter = pMatchsIdt.HasValue ?
                new ObjectParameter("pMatchsIdt", pMatchsIdt) :
                new ObjectParameter("pMatchsIdt", typeof(int));
    
            var pUsrIdtParameter = pUsrIdt.HasValue ?
                new ObjectParameter("pUsrIdt", pUsrIdt) :
                new ObjectParameter("pUsrIdt", typeof(int));
    
            var pScoreParameter = pScore.HasValue ?
                new ObjectParameter("pScore", pScore) :
                new ObjectParameter("pScore", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PostBetHome", pMatchsIdtParameter, pUsrIdtParameter, pScoreParameter);
        }
    
        public virtual int PostScore(string pTeamHome, string pTeamAway, Nullable<int> pScoreHome, Nullable<int> pScoreAway)
        {
            var pTeamHomeParameter = pTeamHome != null ?
                new ObjectParameter("pTeamHome", pTeamHome) :
                new ObjectParameter("pTeamHome", typeof(string));
    
            var pTeamAwayParameter = pTeamAway != null ?
                new ObjectParameter("pTeamAway", pTeamAway) :
                new ObjectParameter("pTeamAway", typeof(string));
    
            var pScoreHomeParameter = pScoreHome.HasValue ?
                new ObjectParameter("pScoreHome", pScoreHome) :
                new ObjectParameter("pScoreHome", typeof(int));
    
            var pScoreAwayParameter = pScoreAway.HasValue ?
                new ObjectParameter("pScoreAway", pScoreAway) :
                new ObjectParameter("pScoreAway", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PostScore", pTeamHomeParameter, pTeamAwayParameter, pScoreHomeParameter, pScoreAwayParameter);
        }
    
        public virtual int PostBetMatch(string pUsrName, string pTeamHome, string pTeamAway, Nullable<int> pScoreHome, Nullable<int> pScoreAway)
        {
            var pUsrNameParameter = pUsrName != null ?
                new ObjectParameter("pUsrName", pUsrName) :
                new ObjectParameter("pUsrName", typeof(string));
    
            var pTeamHomeParameter = pTeamHome != null ?
                new ObjectParameter("pTeamHome", pTeamHome) :
                new ObjectParameter("pTeamHome", typeof(string));
    
            var pTeamAwayParameter = pTeamAway != null ?
                new ObjectParameter("pTeamAway", pTeamAway) :
                new ObjectParameter("pTeamAway", typeof(string));
    
            var pScoreHomeParameter = pScoreHome.HasValue ?
                new ObjectParameter("pScoreHome", pScoreHome) :
                new ObjectParameter("pScoreHome", typeof(int));
    
            var pScoreAwayParameter = pScoreAway.HasValue ?
                new ObjectParameter("pScoreAway", pScoreAway) :
                new ObjectParameter("pScoreAway", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PostBetMatch", pUsrNameParameter, pTeamHomeParameter, pTeamAwayParameter, pScoreHomeParameter, pScoreAwayParameter);
        }
    
        public virtual int PostScoreTeam(Nullable<int> pMatchIdt, Nullable<int> pScoreHome, Nullable<int> pScoreAway)
        {
            var pMatchIdtParameter = pMatchIdt.HasValue ?
                new ObjectParameter("pMatchIdt", pMatchIdt) :
                new ObjectParameter("pMatchIdt", typeof(int));
    
            var pScoreHomeParameter = pScoreHome.HasValue ?
                new ObjectParameter("pScoreHome", pScoreHome) :
                new ObjectParameter("pScoreHome", typeof(int));
    
            var pScoreAwayParameter = pScoreAway.HasValue ?
                new ObjectParameter("pScoreAway", pScoreAway) :
                new ObjectParameter("pScoreAway", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PostScoreTeam", pMatchIdtParameter, pScoreHomeParameter, pScoreAwayParameter);
        }
    }
}
